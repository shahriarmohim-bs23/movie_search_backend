from flask_sqlalchemy import sqlalchemy
from flask_migrate import Migrate
from core import app
from exceptions import NotFoundException
db = sqlalchemy(app)
migrate = Migrate(db,app)


class User(db.Model):
      __tablename__ = 'user'
      id = db.Column(db.Integer,autoincrement=True, primary_key=True)
      fullname = db.Column(db.String(80),  nullable=False)
      email = db.Column(db.String(120), unique=True, nullable=False)
      passward = db.Column(db.String(120),  nullable=False)
      movies = db.relationship('FavouriteMovie',backref='user',lazy='joined')

      def __init__(self,fullname,email,passward) -> None:
          super().__init__()
          self.fullname = fullname
          self.email = email
          self.passward = passward


def create_user(fullname,email,passward):
    user = User(fullname,email,passward)
    db.session.add(user)
    db.session.commit()
    return user

def find_user_by_email(email):
    user = User.query.filter_by(email=email).first()
    return user
def match_passward(email,passward):
    user = find_user_by_email(email)
    if not user:
       raise NotFoundException('User with email')
    return user if user.passward == passward else None


 
class FavoriteMovie(db.Model):
      __tablename__ = 'favorite_movie'
      id = db.Column(db.Integer,autoincrement=True, primary_key=True)
      user_id = db.Column(db.String(80), db.ForeignKey('user.id'), nullable=False,index=True)
      imdb_id = db.Column(db.String(120),  nullable=False)
      def __init__(self,user_id,imdb_id) -> None:
          super().__init__()
          self.user_id = user_id
          self.imdb_id = imdb_id
def Add_favourite_movie(user_id,imdb_id):
    fav_movie = FavoriteMovie(user_id, imdb_id)

    user = User.query.filter_by(id=user_id).first()
    user.movies.append(fav_movie)

    db.session.add(user)
    db.session.commit()

    return user.movies


class search_log(db.Model):
      __tablename__ = 'search_log'
      
      id = db.Column(db.Integer,autoincrement=True, primary_key=True)
      user_id = db.Column(db.String(80), db.ForeignKey('user.id'), nullable=False,index=True)
      query = db.Column(db.Text)
      def __init__(self,user_id,imdb_id,query) -> None:
          super().__init__()
          self.user_id = user_id
          self.query = query
def create_log(user_id,query):
    log = search_log(user_id,query)
    db.session.add(log)
    db.session.commit()
    return log

      

      

